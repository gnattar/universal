%
% S Peron Aug 2010
%
% This will construct a session object from the specified behavioral, ephus, 
%  scanimage and whisker data.
%
% PARAMS:
%
%  dataSourceParams: a structure that contains all the info generateSession uses to
%      generate a session object. [*: minimal requirement]
%
%    *baseFileName: the base file name for where things are stored - FULL path 
%
%    *behavSoloFilePath: the .mat file generated by solo that contains behavioral data log
%
%    *ephusFilePath: where ephus files are ; timestamp, bitcode used for alignment
%    ephusFileWC: wildcard specifying subset of files to use
%    ephusChanIdent: identity of channels that you want pulled
%    ephusDownsample: will downsample by this factor (2 = use 1/2, 10:1/10 and so on)
%
%    *scimFilePath: where scanimage files are
%    scimFileWC: wildcard to apply within directory for files that are trials
%    *roiArrayPath: where the roiArray object resides
%
%    *whiskerFilePath: directories whisker tracking .mat files reside
%	   whiskerFileWC: wildcard to apply therewithin ; if you are importing a 
%      whiskerTrialLiteArray, this should be the filename of that file
%    whiskerFileType: 1 - session.session.whiskerTrial, multiple files
%                     2 - O'connor whiskerTrialLiteArray ; single file
%    whiskerTag: If whiskerFileType 2, must pass because they are not in the
%                 whisker file as they are with type 1.
%    whiskerBarInReachES: Again, with whiskerFileType2, you must pass either an
%                 eventSeries object with exact bar times or, at the very least,
%                 two time points, indicating relative trial start, in milliseconds,
%                 when bar comes in and leaves reach.
%    defaultBarRadius: default bar radius used in contact detection if bar
%                      radius cannot be obtained from whisker data.
% RETURNS:
% 
%   s: full-fledged session object with everything in it
%
% USAGE: 
%
%   s = generateSession(dataSourceParams)
% 
function s = generateSession(dataSourceParams)

  % --- required fields
	requiredFieldList = {'baseFileName', 'behavSoloFilePath', 'ephusFilePath', 'scimFilePath', 'roiArrayPath', ...
	  'whiskerFilePath', 'whiskerTrialArrayBaseFileName'};
	failure = 0;
	for f=1:length(requiredFieldList)
	  if(~isfield(dataSourceParams, requiredFieldList{f}))
		  disp(['generateSession::dataSourceParams.' requiredFieldList{f} ' must be assigned.']);
			failure = 1;
		end
	end
	if (failure) ; return ; end

	% --- defaults for NON-REQUIRED fields
	optionalFieldList =    {'ephusFileWC', 'ephusChanIdent', 'ephusDownsample', 'scimFileWC', 'whiskerFileWC', ...
	  'whiskerVideoTimeOffsetInMs', 'whiskerTrialIncrement', 'whiskerTrialArrayParams'};
	scimFileWC = '*main*tif';
	ephusFileWC = '*xsg';
	ephusDownsample = 100;
	whiskerFileWC = 'WDBP*mat';
	ephusChanIdent = -1; % not used as of now
	whiskerBarInReachES = [];
	whiskerVideoTimeOffsetInMs = 100;
	whiskerTrialIncrement =0;

  % other parameters: if present in dataSourceParams, use it ; 
	%  otherwise, assign default to dataSourceParams
	for f=1:length(optionalFieldList)
		if (isfield(dataSourceParams, optionalFieldList{f})) % assign from dataSourceParams ...
		  eval([optionalFieldList{f} ' = dataSourceParams.' optionalFieldList{f} ';']);
		else % ... or use default from above
		  eval(['dataSourceParams.' optionalFieldList{f} ' = ' optionalFieldList{f} ';']);
		end
	end

	% --- more complex safety checks 
	
  % --- build session object
  % generate session object and assign dataSourceParams
	s = session.session();
	s.dataSourceParams = dataSourceParams;
	s.baseFileName = s.dataSourceParams.baseFileName;

  % call sequential generator with force redo
	s.sequentialSessionGenerator(1);
